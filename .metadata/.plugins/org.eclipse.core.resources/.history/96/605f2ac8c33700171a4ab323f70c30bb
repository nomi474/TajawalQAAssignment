package com.tjwl.pages;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.tjwl.stepdefinitionfiles.Navigation;
import com.tjwl.tests.TestManager;

import java.time.LocalDate;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.concurrent.TimeUnit;

public class SearchFlightsPage {	
	
	TestManager manager = new TestManager();
	private static LocalDate departureDate;
	private static LocalDate returnDate;

    
	public void goToHomePage(String url){
		manager.goToHomePage(url);
	}
    public void selectFlightsPage(){
    	manager.clickButtonWithID("nav-flights-cta");   	
    }
    
    public void selectRoundTrip(){
    	manager.clickButtonWithID("flights-search-type-RoundTrip-inp");
    }
    
    public void setDepartureCity(String departureCity){
    	manager.enterTextIntoWebElement("flights-search-origin-0", departureCity);
    }
    
    public void setDestinationCity(String destinationCity){
    	manager.enterTextIntoWebElement("flights-search-destination-0", destinationCity);
    }

    
    public void selectRandomDepartureDate() {
    	generateRandomDates();
    	List<String> randomDepartureDate = splitDate(departureDate.toString());
    	String departureDay = randomDepartureDate.get(0);
    	int departureMonth = (Integer.parseInt(randomDepartureDate.get(1))-1);
    	String departureYear = randomDepartureDate.get(2);
    	manager.clickButtonWithXPath( ".//*[@id='flights-search-departureDate-RoundTrip-0']");
    	
    	String departureDateXPathString = "(.//*[@class='pika-button pika-day'][@data-pika-day='" 
    									+ departureDay + "']"
    									+ "[@data-pika-month='" + departureMonth 
    									+ "'][@data-pika-year='" + departureYear 
    									+  "'])[1]";
    	manager.clickButtonWithXPath(departureDateXPathString);

    }

    public void selectRandomReturnDate() {
    	List<String> randomReturnDate = splitDate(returnDate.toString());
    	String returnDay = randomReturnDate.get(0);
    	int returnMonth = (Integer.parseInt(randomReturnDate.get(1))-1);
    	String returnYear = randomReturnDate.get(2);
    	
		String returnDateXPathString =	"(.//*[@class='pika-button pika-day'][@data-pika-day='" 
											+ returnDay + "'][@data-pika-month='" + returnMonth 
											+ "'][@data-pika-year='" + returnYear
											+ "'])[2]";
		manager.clickButtonWithXPath(returnDateXPathString);
    }
    
    public void incrementAdultPassengersNumber(){
		//Click on Passengers dropdown
    	manager.clickButtonWithXPath(".//p[@translate-n='totalPax']");

		//Click on plus sign for incrementing adult tickets
    	manager.clickButtonWithXPath(".//i[@class='tj-icon tj-icon--add-c']");
    }
    

    public void searchForTheJourney() {
    	//Click on the 'Search flights' button.
    	manager.clickButtonWithXPath("//span[contains(.,'Search flights')]");	    	
    }
    
    private void generateRandomDates(){    	
    	departureDate = LocalDate.now().plus(Period.ofDays((new Random().nextInt(40))));
    	//LocalDate returnDate = LocalDate.now().plus(Period.ofDays((new Random().nextInt(20))));
    	returnDate = departureDate.now().plus(Period.ofDays((new Random().nextInt(40))));
    	while(returnDate.isBefore(departureDate)){
    		returnDate = LocalDate.now().plus(Period.ofDays((new Random().nextInt(40))));
    	}
    }
    private List<String> splitDate(String date){
    	List<String> myList = new ArrayList<String>();
    	String[] splitDate = date.split("-",2);
      	String year = splitDate[0];
    	String[] monthAndDay = splitDate[1].split("-",2);
    	
    	String day = monthAndDay[1];
    	String month = monthAndDay[0];
    	if(month.startsWith("0")){
    		month = month.substring(1);
    	}
    	if(day.startsWith("0")){
    		day = day.substring(1);
    	}
    	myList.add(day);
    	myList.add(month);
    	myList.add(year);
    	return myList;
    }
}